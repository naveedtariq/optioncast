%SCRIPT{:LANGUAGE => "JavaScript"}
  function formatCurrency(num) {
  num = num.toString().replace(/\$|\,/g,'');
  if(isNaN(num))
  num = "0";
  sign = (num == (num = Math.abs(num)));
  num = Math.floor(num*100+0.50000000001);
  cents = num%100;
  num = Math.floor(num/100).toString();
  if(cents<10)
  cents = "0" + cents;
  for (var i = 0; i < Math.floor((num.length-(1+i))/3); i++)
  num = num.substring(0,num.length-(4*i+3))+','+
  num.substring(num.length-(4*i+3));
  return (((sign)?'':'-') + '$' + num + '.' + cents);
  }

  $(document).ready(function(){
    $('[data-behaviour~=datepicker]').datepicker({
      format: 'mm/dd/yyyy',
      endDate: 'today',
      autoclose: true,
      startView: 2
    });
  })

.row-fluid
  .span10.body-container
    %section#utopia-wizard-form.utopia-widget.utopia-form-box
      .utopia-widget-title
        = image_tag("img/icons/paragraph_justify.png", class: "utopia-widget-icon")
        %span Questionnaire Data
      .row-fluid
        .utopia-widget-content
          .span12
            .sample-form
              %div
                = form_for @user, :url => { action: "submit", method: "patch" } do |f|
                  .utopia-from-action{style:"display: table;margin-left: 60px;"}
                    -if @readonly == true
                      %button.btn.btn-primary.span5{:type => "submit", :name => "edit"} Edit
                    -else
                      %button.btn.btn-primary.span5{:type => "submit"} Save changes
                      %a{:href => data_path}
                        %button.btn.span5{:type => "button"} Cancel     
                  %fieldset
                    .control-group.utopia-form-freeSpace
                      %label.control-label Please select a goal
                      .controls
                        = f.select :goal_id, options_for_select( Goal.all.map { |a| [a.name, a.id] }, f.object.goal_id), {required:true}, {class: "input-fluid" ,disabled: @readonly}
                    = f.fields_for :user_answers do |ff|
                      = ff.hidden_field :question_id
                      = ff.hidden_field :kind, value:ff.object.question.kind

                      .control-group
                        %label#question.control-label= ff.object.question.text
                        .controls
                          - if ff.object.question.kind == 'Value'
                            = ff.text_field :value, required:true, readonly: @readonly, type:"text", onBlur:"this.value=formatCurrency(this.value)", placeholder: "$0", class: "input-fluid"
                          - elsif ff.object.question.kind == 'Date'
                            = ff.text_field :value, "data-behaviour" => 'datepicker', required:true, readonly: @readonly, type:"text", class: "input-fluid", placeholder:"mm/dd/yyyy", value: ff.object.value
                          - elsif ff.object.question.kind == 'Dropdown'
                            = ff.select :answer_id, options_for_select( Answer.where(question: ff.object.question.id).map { |a| [a.text, a.id] },ff.object.answer_id), {required:true}, {class: "input-fluid", disabled: @readonly}
                  